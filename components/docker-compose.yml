version: "3.4"
services:
  mongo1:
    image: mongo
    ports:
      - '27017:27017'
    command: mongod --noauth --replSet rs1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_storage1:/data/db
    networks:
      - mongo
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.replica == 1
  mongo2:
    image: mongo
    ports:
      - '27018:27017'
    command: mongod --noauth --replSet rs1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_storage2:/data/db
    networks:
      - mongo
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.replica == 2
  mongo3:
    image: mongo
    ports:
      - '27019:27017'
    command: mongod --noauth --replSet rs1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_storage3:/data/db
    networks:
      - mongo
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.replica == 3
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo1
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongo1,mongo2,mongo3:27017/db?replicaSet=rs1
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - VCAP_APP_HOST=0.0.0.0
    ports:
      - '8081:8081'
    volumes: 
      - mongo_storage1:/data/db
    networks:
      - mongo
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.mongo.replica == 1
  webservice:
    image: managernode:5000/webservice:1.1.2
    restart: always
    ports:
      - '80:3000'
    networks:
      - mongo
    volumes:
      - /mnt:/mnt
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.webservice == true

networks:
  mongo:
    driver: overlay
    attachable: true

volumes:
  mongo_storage1:
  mongo_storage2:
  mongo_storage3: